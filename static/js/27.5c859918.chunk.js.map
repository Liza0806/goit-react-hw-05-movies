{"version":3,"file":"static/js/27.5c859918.chunk.js","mappings":"wSAIaA,GAAWC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,wMAaRE,EAAWF,EAAAA,GAAAA,IAAH,gG,kBCfRG,EAAmBH,EAAAA,GAAAA,IAAH,0CAIhBI,EAAmBJ,EAAAA,GAAAA,IAAH,sDAKhBK,EAAaL,EAAAA,GAAAA,GAAH,iGAOVM,EAAON,EAAAA,GAAAA,KAAH,8GAMJO,EAAYP,EAAAA,GAAAA,EAAH,+CAKTQ,EAAcR,EAAAA,GAAAA,EAAH,6DAKXS,EAAWT,EAAAA,GAAAA,EAAH,4CAIRU,EAAaV,EAAAA,GAAAA,GAAH,gLAiBVW,EAAUX,EAAAA,GAAAA,IAAH,6DAKPY,EAAwBZ,EAAAA,GAAAA,GAAH,mIAQrBa,EAAwBb,EAAAA,GAAAA,GAAH,yV,SCpDrBc,EAAgB,SAAC,GAAiB,IAAhBC,EAAe,EAAfA,UAC3B,OACA,UAACZ,EAAD,YACA,UAACC,EAAD,YACE,SAACC,EAAD,UAAaU,EAAUC,SACvB,UAACT,EAAD,gBAAY,SAACD,EAAD,2BAA0BS,EAAUE,eAChD,UAACT,EAAD,4BAA4BO,EAAUG,iBACtC,UAACT,EAAD,YAAU,SAACH,EAAD,wBAAV,IAAkCS,EAAUI,gBAE9C,yBACHJ,EAAUK,aACX,SAACT,EAAD,CAASU,IAAG,yCAAoCN,EAAUK,aAAeE,IAAKP,EAAUC,SAExF,SAAC,MAAD,CAAWO,MAAO,CAAEC,QAAS,MAAOC,MAAO,QAASC,OAAQ,QAASC,OAAQ,mBAI5E,EAEYC,EAAkB,SAAC,GAAiB,IAAhBb,EAAe,EAAfA,UAC7B,OAAQ,UAACL,EAAD,YACD,SAACJ,EAAD,uBACES,EAAUc,OAAOC,KAAI,SAACC,GAAD,OACpB,wBAAkBA,EAAIC,MAAbD,EAAIE,GADO,MAIjC,EAEYC,EAA+B,SAAC,GAAiB,IAAhBnB,EAAe,EAAfA,UAE1C,OACI,4BACA,SAACT,EAAD,qCACA,SAACM,EAAD,UACGG,EAAUoB,qBAAqBL,KAAI,SAACM,GAAD,OAClC,UAACvB,EAAD,YACE,yBACGuB,EAAKC,WACJ,gBACEhB,IAAG,8CAAyCe,EAAKC,WACjDf,IAAKc,EAAKJ,QAGZ,SAAC,MAAD,CAAgBT,MAAO,CAAEE,MAAO,QAASC,OAAQ,cAGrD,yBAAMU,EAAKJ,SAXeI,EAAKH,GADC,QAmB7C,ECXD,EAhDqB,WAAO,IAAD,IAEhBK,GAAWC,EAAAA,EAAAA,MAAXD,QACDE,GAAWC,EAAAA,EAAAA,MACjB,GAAkCC,EAAAA,EAAAA,UAAS,MAA3C,eAAO3B,EAAP,KAAkB4B,EAAlB,KACMC,GAAsBC,EAAAA,EAAAA,QAAM,oBAACL,EAASM,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,WAiBzD,OAfFC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAG,qDAC4BX,GAE/BY,EAAW,mCAAG,qGACCC,EAAAA,EAAAA,GAAUF,GADX,QACZG,EADY,SAGhBT,EAAaS,GAHG,2CAAH,qDAOjBF,GACD,GAAE,CAACZ,IAGGvB,GAOP,4BACA,SAACD,EAAD,CAAeC,UAAWA,KAC1B,SAACa,EAAD,CAAiBb,UAAWA,IAIrBA,EAAUoB,qBAAqBkB,OAAS,GAC3C,SAACnB,EAAD,CAA8BnB,UAAWA,IAC7C,MAEE,0BACA,UAACb,EAAD,YAAU,SAACH,EAAD,CAAUuD,GAAG,OAAb,mBACR,SAACvD,EAAD,CAAUuD,GAAG,UAAb,sBACA,SAACvD,EAAD,CAAUuD,GAAIV,EAAoBW,QAAlC,wBAEF,SAAC,KAAD,QArBS,SAAC,IAAD,GAwBd,C","sources":["pages/MovieDetails/MovieDetails.styled.js","components/AboutFilm/AboutFilm.styled.js","components/AboutFilm/AboutFilm.js","pages/MovieDetails/MovieDetails.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\n\nexport const BackLink = styled(Link)`\n  font-size: 18px;\n  margin-right: 20px;\n  color: #ff4500;\n  font-weight: bold; \n  text-decoration: none;\n\n  &:hover,\n  &:focus {\n    text-decoration: underline;\n  }\n`;\n\nexport const ForLinks = styled.div`\ndisplay: flex; \njustify-content: space-around;\npadding-bottom: auto;\n`;","import styled from 'styled-components';\n\nexport const DetailsContainer = styled.div`\n  display: flex;\n`;\n\nexport const ContentContainer = styled.div`\n  flex: 1;\n  padding: 20px;\n`;\n\nexport const MovieTitle = styled.h1`\n  font-size: 24px;\n  margin: 0;\n  color: #333; \n  font-weight: bold;\n`;\n\nexport const Bold = styled.span`\n  font-size: 18px;\n  font-weight: bold; \n  display: block;\n  margin-bottom: 20px;\n`;\nexport const UserScore = styled.p`\n  font-size: 18px;\n \n`;\n\nexport const ReleaseDate = styled.p`\n  font-size: 18px;\n  color: #777; \n`;\n\nexport const Overview = styled.p`\n  font-size: 18px;\n`;\n\nexport const GenresList = styled.ul`\n  list-style-type: none;\n  font-size: 18px;\n  padding: 0;\n  margin: 0;\n  display: flex;\n  gap: 10px;\n\n\n  li {\n    margin-bottom: 5px;\n \n  }\n`;\n\n\n\nexport const MainImg = styled.img`\nwidth: 300px;\nborder-radius: 10px;\n`;\n\nexport const ProductionCompanyList = styled.ul`\n  list-style-type: none;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  padding: 0;\n`;\n\nexport const ProductionCompanyCard = styled.li`\n  background-color: #f5f5f5;\n  border: 1px solid #ccc;\n  margin: 10px;\n  width: 250px;\n  padding: 10px;\n  text-align: center;\n\n  img {\n    width: 100px;\n    height: 100px;\n    object-fit: contain;\n    margin: 10px auto;\n    display: block;\n  }\n\n  div {\n    font-weight: bold;\n    margin-top: 10px;\n  }\n`;","import { CiImageOn } from 'react-icons/ci'\nimport { FcCamcorderPro } from 'react-icons/fc';\nimport {\n  DetailsContainer, \n  ContentContainer, \n  MovieTitle, \n  UserScore, \n  ReleaseDate, \n  Overview,\n  Bold,\n  MainImg, \n  GenresList,\n  ProductionCompanyList,\n  ProductionCompanyCard,\n} from \"./AboutFilm.styled\"\n\nexport const AboutFilmMain = ({movieData}) => {\n    return(\n    <DetailsContainer>\n    <ContentContainer>\n      <MovieTitle>{movieData.title}</MovieTitle>\n      <UserScore> <Bold>User score: </Bold>{movieData.popularity}</UserScore>\n      <ReleaseDate>Release date: {movieData.release_date}</ReleaseDate>\n      <Overview><Bold>Overview:</Bold> {movieData.overview}</Overview>\n    </ContentContainer>\n    <div>\n{movieData.poster_path ? (\n<MainImg src={`https://image.tmdb.org/t/p/w500${movieData.poster_path}`} alt={movieData.title} />\n) : (\n<CiImageOn style={{ opacity: '0.5', width: '100px', height: '150px', margin: '10px auto' }} />\n)}\n</div>\n  </DetailsContainer>)\n}\n\nexport const AboutFilmGenres = ({movieData}) => {\n    return (<GenresList>\n           <Bold>Genres: </Bold> \n            {movieData.genres.map((gen) => (\n              <li key={gen.id}>{gen.name}</li>\n            ))}\n          </GenresList> )\n}\n\nexport const AboutFilmProdactionCompanies = ({movieData}) => {\n\n    return (\n        <div>\n        <Bold>Production companies:</Bold>\n        <ProductionCompanyList>\n          {movieData.production_companies.map((prod) => (\n            <ProductionCompanyCard key={prod.id}>\n              <div>\n                {prod.logo_path ? (\n                  <img\n                    src={`https://image.tmdb.org/t/p/original/${prod.logo_path}`}\n                    alt={prod.name}\n                  />\n                ) : (\n                  <FcCamcorderPro style={{ width: '100px', height: '100px' }} />\n                )}\n              </div>\n              <div>{prod.name}</div>\n            </ProductionCompanyCard>\n          ))}\n        </ProductionCompanyList>\n      </div>\n    )\n\n}","import { Outlet, useParams, useLocation } from \"react-router-dom\"\nimport { useState, useEffect, useRef } from \"react\";\nimport { fetchData } from \"Helpers/Helpers\";\nimport { LoadingSpinner } from \"Helpers/Helpers\";\nimport { BackLink, ForLinks } from \"./MovieDetails.styled\";\nimport { \n  AboutFilmMain, \n  AboutFilmGenres,\n  AboutFilmProdactionCompanies } from \"components/AboutFilm/AboutFilm\";\n\nconst MovieDetails = () => {\n\n    const {movieId} = useParams();\n    const location = useLocation();\n    const [movieData, setMovieData] = useState(null);\n    const backLinkLocationRef = useRef(location.state?.from ?? '/movies');\n\n    useEffect(() => {\n      const url = `\n      https://api.themoviedb.org/3/movie/${movieId}`; \n    \n      const fetchMDData = async () => {\n        const data = await fetchData(url);\n        if (data) {\n          setMovieData(data);  \n        }\n      };\n    \n      fetchMDData();\n    }, [movieId]);\n\n\n      if (!movieData) {\n        return <LoadingSpinner/>\n      }\n\n\n   \n  return (\n    <div> \n    <AboutFilmMain movieData={movieData}/>\n    <AboutFilmGenres movieData={movieData}/>\n    \n     \n          \n          {movieData.production_companies.length > 0 ? (\n        <AboutFilmProdactionCompanies movieData={movieData}/>\n) : null}\n       \n      <div>\n      <ForLinks><BackLink to=\"cast\">Cast</BackLink>\n        <BackLink to=\"reviews\">Reviews</BackLink>\n        <BackLink to={backLinkLocationRef.current}>Back</BackLink></ForLinks>\n      </div>\n      <Outlet />\n    </div>\n  );\n};\nexport default MovieDetails\n\n"],"names":["BackLink","styled","Link","ForLinks","DetailsContainer","ContentContainer","MovieTitle","Bold","UserScore","ReleaseDate","Overview","GenresList","MainImg","ProductionCompanyList","ProductionCompanyCard","AboutFilmMain","movieData","title","popularity","release_date","overview","poster_path","src","alt","style","opacity","width","height","margin","AboutFilmGenres","genres","map","gen","name","id","AboutFilmProdactionCompanies","production_companies","prod","logo_path","movieId","useParams","location","useLocation","useState","setMovieData","backLinkLocationRef","useRef","state","from","useEffect","url","fetchMDData","fetchData","data","length","to","current"],"sourceRoot":""}