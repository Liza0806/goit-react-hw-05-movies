{"version":3,"file":"static/js/631.d9feabb6.chunk.js","mappings":"4TAGaA,EAAmBC,EAAAA,GAAAA,IAAH,0CAIhBC,EAAmBD,EAAAA,GAAAA,IAAH,sDAKhBE,EAAaF,EAAAA,GAAAA,GAAH,iGAOVG,EAAOH,EAAAA,GAAAA,KAAH,8GAMJI,EAAYJ,EAAAA,GAAAA,EAAH,+CAKTK,EAAcL,EAAAA,GAAAA,EAAH,6DAKXM,EAAWN,EAAAA,GAAAA,EAAH,4CAIRO,EAAaP,EAAAA,GAAAA,GAAH,gLAgBVQ,GAAWR,EAAAA,EAAAA,IAAOS,EAAAA,GAAPT,CAAH,wMAYRU,EAAUV,EAAAA,GAAAA,IAAH,6DAIPW,EAAWX,EAAAA,GAAAA,IAAH,gGAMRY,EAAwBZ,EAAAA,GAAAA,GAAH,mIAQrBa,EAAwBb,EAAAA,GAAAA,GAAH,yV,SCiClC,EA/FqB,WAAO,IAAD,IAEhBc,GAAWC,EAAAA,EAAAA,MAAXD,QACDE,GAAWC,EAAAA,EAAAA,MACjB,GAAkCC,EAAAA,EAAAA,UAAS,MAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACMC,GAAsBC,EAAAA,EAAAA,QAAM,oBAACN,EAASO,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,WAyBzD,OAtBFC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAS,mCAAG,6GAECC,EAAAA,EAAAA,IAAA,sDACiBb,GACrC,CACCc,QAAS,CACTC,OAAQ,mBACPC,cAAe,gOAPE,OAEhBC,EAFgB,OAUpBX,EAAaW,EAASC,MAVF,gDAaXC,QAAQC,MAAM,SAAd,MAbW,yDAAH,qDAgBjBR,GAEC,GAAE,CAACZ,IAGCK,GAmBP,4BACE,UAACpB,EAAD,YACE,UAACE,EAAD,YACE,SAACC,EAAD,UAAaiB,EAAUgB,SACvB,UAAC/B,EAAD,gBAAY,SAACD,EAAD,2BAA0BgB,EAAUiB,eAChD,UAAC/B,EAAD,4BAA4Bc,EAAUkB,iBACtC,UAAC/B,EAAD,YAAU,SAACH,EAAD,wBAAV,IAAkCgB,EAAUmB,gBAE9C,0BACE,SAAC5B,EAAD,CAAS6B,IAAG,yCAAoCpB,EAAUqB,aAAeC,IAAKtB,EAAUgB,cAG3F,UAAC5B,EAAD,YACI,SAACJ,EAAD,uBACEgB,EAAUuB,OAAOC,KAAI,SAACC,GAAD,OACpB,wBAAkBA,EAAIC,MAAbD,EAAIE,GADO,QAIxB,4BACA,SAAC3C,EAAD,qCACA,SAACS,EAAD,UACGO,EAAU4B,qBAAqBJ,KAAI,SAACK,GAAD,OAClC,UAACnC,EAAD,YACE,yBACGmC,EAAKC,WACJ,gBACEV,IAAG,8CAAyCS,EAAKC,WACjDR,IAAKO,EAAKH,QAGZ,SAAC,MAAD,CAAgBK,MAAO,CAAEC,MAAO,QAASC,OAAQ,cAGrD,yBAAMJ,EAAKH,SAXeG,EAAKF,GADC,UAgB1C,0BACA,UAACnC,EAAD,YAAU,SAACH,EAAD,CAAU6C,GAAG,OAAb,mBACR,SAAC7C,EAAD,CAAU6C,GAAG,UAAb,sBACA,SAAC7C,EAAD,CAAU6C,GAAIhC,EAAoBiC,QAAlC,wBAEF,SAAC,KAAD,QA3DS,0BACL,SAAC,KAAD,CACFC,SAAS,EACTH,OAAO,KACPD,MAAM,KACNK,UAAU,iBACVC,aAAc,CAAC,EACfC,aAAa,iBACbC,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,cAsD5D,C","sources":["pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const DetailsContainer = styled.div`\n  display: flex;\n`;\n\nexport const ContentContainer = styled.div`\n  flex: 1;\n  padding: 20px;\n`;\n\nexport const MovieTitle = styled.h1`\n  font-size: 24px;\n  margin: 0;\n  color: #333; \n  font-weight: bold;\n`;\n\nexport const Bold = styled.span`\n  font-size: 18px;\n  font-weight: bold; \n  display: block;\n  margin-bottom: 20px;\n`;\nexport const UserScore = styled.p`\n  font-size: 18px;\n \n`;\n\nexport const ReleaseDate = styled.p`\n  font-size: 18px;\n  color: #777; \n`;\n\nexport const Overview = styled.p`\n  font-size: 18px;\n`;\n\nexport const GenresList = styled.ul`\n  list-style-type: none;\n  font-size: 18px;\n  padding: 0;\n  margin: 0;\n  display: flex;\n  gap: 10px;\n\n\n  li {\n    margin-bottom: 5px;\n \n  }\n`;\n\n\nexport const BackLink = styled(Link)`\n  font-size: 18px;\n  margin-right: 20px;\n  color: #ff4500;\n  font-weight: bold; \n  text-decoration: none;\n\n  &:hover,\n  &:focus {\n    text-decoration: underline;\n  }\n`;\nexport const MainImg = styled.img`\nwidth: 300px;\nborder-radius: 10px;\n`;\nexport const ForLinks = styled.div`\ndisplay: flex; \njustify-content: space-around;\npadding-bottom: auto;\n`;\n\nexport const ProductionCompanyList = styled.ul`\n  list-style-type: none;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  padding: 0;\n`;\n\nexport const ProductionCompanyCard = styled.li`\n  background-color: #f5f5f5;\n  border: 1px solid #ccc;\n  margin: 10px;\n  width: 250px;\n  padding: 10px;\n  text-align: center;\n\n  img {\n    width: 100px;\n    height: 100px;\n    object-fit: contain;\n    margin: 10px auto;\n    display: block;\n  }\n\n  div {\n    font-weight: bold;\n    margin-top: 10px;\n  }\n`;","import { Outlet, useParams, useLocation } from \"react-router-dom\"\nimport { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport { FcCamcorderPro } from 'react-icons/fc';\nimport { ColorRing } from  'react-loader-spinner';\nimport {\n  DetailsContainer, \n  ContentContainer, \n  MovieTitle, \n  UserScore, \n  ReleaseDate, \n  Overview, GenresList, \n \n  BackLink,\n  Bold,\n  MainImg,\n  ForLinks,\n  ProductionCompanyList,\n  ProductionCompanyCard\n} from \"./MovieDetails.styled\"\n\n// FcFilm\n\nconst MovieDetails = () => {\n\n    const {movieId} = useParams();\n    const location = useLocation();\n    const [movieData, setMovieData] = useState(null);\n    const backLinkLocationRef = useRef(location.state?.from ?? '/movies');\n\n   // console.log(location)\n    useEffect(() => {\n        const fetchData = async () => {\n                  try {  \n    const response = await axios.get(`\n       https://api.themoviedb.org/3/movie/${movieId}`, \n       {\n        headers: {\n        Accept: 'application/json',\n         Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIzZmQwOGNhMTljY2JmM2U1MjgwN2ViZmVjZDEwOGUzNiIsInN1YiI6IjY1MTJiYjFkYTkxMTdmNzY1ZDg4OTgxNiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.wk5fdIqZPgG2xDOolV97Xo9axot0ymipWFnQCS9z3XQ' \n        },\n      });  \n      setMovieData(response.data); \n      \n    } catch (error) {\n               console.error('Error:', error);\n             }}\n\n      fetchData();\n       \n      }, [movieId]);\n\n\n      if (!movieData) {\n     \n        return <div> \n          <ColorRing\n        visible={true}\n        height=\"80\"\n        width=\"80\"\n        ariaLabel=\"blocks-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"blocks-wrapper\"\n        colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n      />\n      </div>;\n      }\n     // console.log(movieData)\n\n\n   \n  return (\n    <div>\n      <DetailsContainer>\n        <ContentContainer>\n          <MovieTitle>{movieData.title}</MovieTitle>\n          <UserScore> <Bold>User score: </Bold>{movieData.popularity}</UserScore>\n          <ReleaseDate>Release date: {movieData.release_date}</ReleaseDate>\n          <Overview><Bold>Overview:</Bold> {movieData.overview}</Overview>\n        </ContentContainer>\n        <div>\n          <MainImg src={`https://image.tmdb.org/t/p/w500${movieData.poster_path}`} alt={movieData.title} />\n        </div>\n      </DetailsContainer>\n       <GenresList>\n           <Bold>Genres: </Bold> \n            {movieData.genres.map((gen) => (\n              <li key={gen.id}>{gen.name}</li>\n            ))}\n          </GenresList> \n          <div>\n          <Bold>Production companies:</Bold> \n          <ProductionCompanyList>\n            {movieData.production_companies.map((prod) => (\n              <ProductionCompanyCard key={prod.id}>\n                <div>\n                  {prod.logo_path ? (\n                    <img\n                      src={`https://image.tmdb.org/t/p/original/${prod.logo_path}`}\n                      alt={prod.name}\n                    />\n                  ) : (\n                    <FcCamcorderPro style={{ width: '100px', height: '100px' }} />\n                  )}\n                </div>\n                <div>{prod.name}</div>\n              </ProductionCompanyCard>\n            ))}\n          </ProductionCompanyList></div>\n      <div>\n      <ForLinks><BackLink to=\"cast\">Cast</BackLink>\n        <BackLink to=\"reviews\">Reviews</BackLink>\n        <BackLink to={backLinkLocationRef.current}>Back</BackLink></ForLinks>\n      </div>\n      <Outlet />\n    </div>\n  );\n};\nexport default MovieDetails\n\n"],"names":["DetailsContainer","styled","ContentContainer","MovieTitle","Bold","UserScore","ReleaseDate","Overview","GenresList","BackLink","Link","MainImg","ForLinks","ProductionCompanyList","ProductionCompanyCard","movieId","useParams","location","useLocation","useState","movieData","setMovieData","backLinkLocationRef","useRef","state","from","useEffect","fetchData","axios","headers","Accept","Authorization","response","data","console","error","title","popularity","release_date","overview","src","poster_path","alt","genres","map","gen","name","id","production_companies","prod","logo_path","style","width","height","to","current","visible","ariaLabel","wrapperStyle","wrapperClass","colors"],"sourceRoot":""}